{"version":3,"sources":["logo.svg","firebase.js","context/AuthContext.js","components/constant/web_bar.js","components/sign_in_sign__up/sign_up.js","components/writing_feature/song_enter_page/song_enter_page.js","components/constant/hash_tag.js","components/constant/moods.js","components/writing_feature/writing_pages/constant/mood_constant.js","components/posts_content/post_content.js","components/writing_feature/writing_pages/writing_post.js","components/sign_in_sign__up/log_in.js","components/constant/hash_tag_ui.js","components/constant/moody_ui.js","components/side_info/options.js","components/side_info/filter.js","components/share/song_surge_share.js","components/search/song_surge_search.js","components/writing_feature/writing_pages/writing_question.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","auth","getAuth","rtdb","getDatabase","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","Provider","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","paddingLeft","color","fontSize","fontFamily","titleItem","padding","AppNavBar","props","classes","nameAppBar","isLogin","isShare","className","AppBar","position","style","background","Toolbar","textDecoration","Typography","variant","to","SignIn","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","confirmPassword","setConfirmPassword","registerUserName","setRegisterUserName","errorMessage","setErrorMessage","errorType","setErrorType","navigate","useNavigate","event","a","preventDefault","length","docRef","doc","uid","userInfo","username","setDoc","Form","Group","Label","Control","type","placeholder","onChange","target","required","isInvalid","Feedback","Button","onClick","signUp","EnterSongPage","songLink","setSongLink","textAlign","marginTop","marginBottom","TextField","width","id","label","state","CONST_HASHTAG","MOODY","moodColor","moodSymbol","moodContent","moodValue","listMoody","Object","entries","map","item","key","moody","CustomOption","PostContent","link","backgroundColor","postingTime","content","hashTags","moodyPart","postId","userId","userName","isPreview","isQuestion","undefined","curComment","setComment","isChosen","setChose","setUser","postComment","setPostComment","showComment","setShowComment","commentRef","useRef","postRef","userRef","date","Date","hour","toString","slice","strDate","resetComment","console","log","keyCode","commentData","author","current","newCommentKey","push","child","ref","newComment","updateDoc","comment","updates","update","onClickComment","newVal","onValue","snapshot","val","getUser","getDoc","data","vidId","index","getVidID","height","src","frameborder","allow","allowfullscreen","display","flexDirection","onSelect","onKeyDown","keyDown","x","updateCommnet","lstMoody","WritingPost","useLocation","setContent","setHashTags","setMoody","chosingColor","setChosingColor","postsRef","collection","addDoc","now","maxWidth","marginLeft","as","rows","Autocomplete","multiple","options","option","freeSolo","renderTags","getTagProps","Chip","renderInput","params","Row","Col","xs","defaultValue","Select","_setMoody","SignUp","loginEmail","setLoginEmail","loginPassword","setLoginPassword","logIn","HashTag","hashtag","Moody","Option","search","moods","class","flexWrap","Filter","mood","closeFunction","hasFilter","SongSurgeShare","posts","setPosts","getDocs","listPost","docs","docData","seconds","isPost","reverse","getPosts","SongSurgeSearch","WritingQuestion","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d42135ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nimport { getDatabase } from \"@firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCLwip2thVYGIyDcjL0zJ-8iY5m9v_Y8VU\",\r\n  authDomain: \"song-surge.firebaseapp.com\",\r\n  databaseURL: \"https://song-surge-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"song-surge\",\r\n  storageBucket: \"song-surge.appspot.com\",\r\n  messagingSenderId: \"1064758627923\",\r\n  appId: \"1:1064758627923:web:cb351463008e8b422cc0a6\",\r\n  measurementId: \"G-DC5H8NW49M\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\nconst rtdb = getDatabase(app);\r\n\r\nexport {auth, db, rtdb};","import React, { useContext, useState, useEffect } from 'react';\r\nimport {auth} from '../firebase.js';\r\nimport {\r\ncreateUserWithEmailAndPassword,\r\nsignInWithEmailAndPassword,\r\nonAuthStateChanged,\r\nsignOut,\r\n} from \"firebase/auth\";\r\nconst AuthContext = React.createContext();\r\n\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function signup(email, password) {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    function login(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, user => {\r\n            setLoading(false);\r\n            setCurrentUser(user);\r\n        })\r\n        return unsubscribe;\r\n    }, [])\r\n\r\n    function signin(email, password) {\r\n\r\n    }\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup\r\n    }\r\n    return (\r\n        <AuthContext.Provider value = {value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from 'react-router-dom';\r\nimport \"@fontsource/leckerli-one\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    paddingLeft: 20,\r\n    color: '#F47B0A',\r\n    // color: 'white',  \r\n    fontSize: 30,\r\n    fontFamily: \"Leckerli One\",\r\n  },\r\n  titleItem:{\r\n    color: 'black',\r\n    fontSize: 16,\r\n    padding: 12\r\n  }\r\n}));\r\n\r\nexport default function AppNavBar(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    nameAppBar,\r\n    isLogin = true,\r\n    isShare = true,\r\n  } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\"  style={{ background: '\t#F8F8F8'}} >\r\n        <Toolbar>\r\n          <div style={{ textDecoration: 'none', flexGrow: 1}}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {nameAppBar}\r\n            </Typography>\r\n          </div>\r\n\r\n          {\r\n            (isLogin && isShare == false) \r\n            ? <Link to=\"/song_surge_share\" style={{ textDecoration: 'none'}}>\r\n              <Typography variant=\"h6\" className={classes.titleItem}>\r\n                Share\r\n              </Typography>\r\n            </Link>\r\n            :<> </>\r\n          }\r\n\r\n          {\r\n            (isLogin && isShare)\r\n            ? <Link to=\"/song_surge_search\" style={{ textDecoration: 'none'}}>\r\n              <Typography variant=\"h6\" className={classes.titleItem}>\r\n                Search\r\n              </Typography>\r\n            </Link>\r\n            : <></>\r\n          }\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from \"firebase/auth\";\r\nimport { setDoc, doc, collection, getDoc } from \"firebase/firestore\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { auth, db } from \"../../firebase\";\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport AppNavBar from \"../constant/web_bar\";\r\n\r\nfunction SignIn() {\r\n  const [registerEmail, setRegisterEmail] = useState(\"\");\r\n  const [registerPassword, setRegisterPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [registerUserName, setRegisterUserName] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [errorType, setErrorType] = useState(0);\r\n  const [loginEmail, setLoginEmail] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  const [loginUserName, setLoginUserName] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n  const { signup } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  async function signUp(event) {\r\n    event.preventDefault();\r\n\r\n    if(registerPassword.length < 6) {\r\n      setErrorMessage(\"Password needs to have at least 6 characters\");\r\n      setErrorType(2);\r\n      return;\r\n    }\r\n    if(registerPassword != confirmPassword) {\r\n      setErrorMessage(\"Password doesn't match\");\r\n      setErrorType(2);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const user = await signup(registerEmail, registerPassword);\r\n      const docRef = doc(db, \"users\", user.user.uid);\r\n      const userInfo = {username: registerUserName};\r\n      await setDoc(docRef, userInfo);\r\n      navigate(\"/song_surge_share\");\r\n    } catch {\r\n      setErrorMessage(\"Invalid email\");\r\n      setErrorType(1);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <AppNavBar nameAppBar = \"SongSurge\" isLogin = {false}/>\r\n      <div className = \"container\">\r\n          <div>\r\n            <div className = \"log_in_container\"></div>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type = \"text\" placeholder = \"Enter your email here\" onChange = {(event) => {\r\n                    setRegisterEmail(event.target.value)\r\n                  }} required isInvalid = {errorType == 1}></Form.Control>\r\n                  <Form.Control.Feedback type = \"invalid\">\r\n                    {errorMessage}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control type = \"text\" placeholder = \"How can we call you\" onChange = {(event) => {\r\n                    setRegisterUserName(event.target.value)\r\n                  }}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type = \"password\" placeholder = \"Password\" onChange = {(event) => {\r\n                    setRegisterPassword(event.target.value)\r\n                  }}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Form.Label>Password Confirmation</Form.Label>\r\n                  <Form.Control type = \"password\" placeholder = \"Confirm Password\" onChange = {(event) => {\r\n                    setConfirmPassword(event.target.value)\r\n                  }} required isInvalid = {errorType == 2}></Form.Control>\r\n                  <Form.Control.Feedback type = \"invalid\">\r\n                    {errorMessage}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Button onClick = {(event) => {signUp(event)}}>\r\n                  Sign Up\r\n                </Button>\r\n\r\n              </Form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default SignIn;","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Button } from \"react-bootstrap\"\r\nimport TextField from '@mui/material/TextField';\r\nimport './song_enter_page_style.css';\r\nimport AppNavBar from \"../../constant/web_bar\";\r\n\r\nfunction EnterSongPage() {\r\n\r\n    const navigate = useNavigate();\r\n    const [songLink, setSongLink] = useState(\"\");\r\n\r\n    function getSongLink() {\r\n        navigate(\"/writing_post\", {state: {songLink: songLink}});\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <AppNavBar nameAppBar = \"SongSurge\"/>\r\n            <div style = {{textAlign: \"center\"}}>\r\n                <div style = {{fontSize: 50, textAlign: \"center\", marginTop: 100, marginBottom: 150}}>Share your song link here</div>\r\n                <div>\r\n                    <TextField\r\n                        style = {{width: 600}}\r\n                        id=\"outlined-secondary\"\r\n                        label=\"Share your song link here\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        placeholder = \"Your song link\"\r\n                        onChange = {(event) => {\r\n                            setSongLink(event.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div style = {{marginTop: 50, marginBottom: 50}}>\r\n                    <Button onClick = {getSongLink}>\r\n                        Continue\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EnterSongPage;","export const CONST_HASHTAG = [\r\n    {id: 1, title: \"happy\"},\r\n    {id: 2, title: \"sad\"},\r\n    {id: 3, title: \"surprise\"},\r\n    {id: 4, title: \"afraid\"},\r\n    {id: 5, title: \"disgust\"},\r\n    {id: 6, title: \"angry\"},\r\n];\r\n\r\n","export const MOODY = {\r\n    \"Cucumber\": {\r\n        moodColor: '#DEFFCB',\r\n        moodSymbol: '🥒',\r\n        moodContent: 'As cool as a cucumber',\r\n        moodValue: \"Cucumber\"\r\n    },\r\n    \"CozyBed\" : {\r\n        moodColor: \"#DD9E8D\",\r\n        moodSymbol: \"🛏️\",\r\n        moodContent: \"Cozy in bed\",\r\n        moodValue: \"CozyBed\"\r\n    },\r\n    \"Blue\" : {\r\n        moodColor: \"#D2F4FF\",\r\n        moodSymbol: '🌀',\r\n        moodContent: \"Feeling blue\",\r\n        moodValue: \"Blue\",\r\n    },\r\n    \"HappySunny\": {\r\n        moodColor: '#f9f1d1',\r\n        moodSymbol: '🌞',\r\n        moodContent: 'Feeling happy like a sunny day',\r\n        moodValue: 'HappySunny'\r\n    },\r\n    \"FireRock\" : {\r\n        moodColor: \"#FFDBDB\",\r\n        moodSymbol: \"💥\",\r\n        moodContent: \"Ready to rock\",\r\n        moodValue: \"FireRock\",\r\n    },\r\n    \"NervousRobot\" : {\r\n        moodColor: \"#bcbcbc\",\r\n        moodSymbol: \"🤖\",\r\n        moodContent: \"Nervous as a robot\",\r\n        moodValue: \"NervousRobot\",\r\n    }\r\n}","import { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport {CONST_HASHTAG} from '../../../constant/hash_tag.js';\r\nimport {MOODY} from '../../../constant/moods.js';\r\nimport '../writing_pages.css';\r\n// import '../../../post_content/post_content.css';\r\n// function singleHashTag() {\r\n\r\n// }\r\n\r\nexport const listMoody = Object.entries(MOODY).map((item) => {\r\n    const key = item[0];\r\n    const moody = MOODY[key];\r\n    return <CustomOption\r\n        key = {key}\r\n        moodSymbol = {moody.moodSymbol}\r\n        moodContent = {moody.moodContent}\r\n        moodValue = {moody.moodValue}\r\n     ></CustomOption>\r\n});\r\n\r\nexport default function CustomOption(props) {\r\n    const {\r\n        moodSymbol,\r\n        moodContent,\r\n        moodValue,\r\n    } = props\r\n    return (\r\n        <option value = {moodValue}>\r\n            {moodSymbol}{\" \" + moodContent}\r\n        </option>\r\n    );\r\n}\r\n","import \"./post_content.css\"\r\nimport { React, useEffect, useState, useRef } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { rtdb, db } from \"../../firebase.js\"\r\nimport { doc, getDoc, updateDoc } from \"@firebase/firestore\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { update, child, ref, push, onValue } from \"@firebase/database\";\r\n/**\r\n * @author Rvvse\r\n * @param {{\r\n *  link: string\r\n *  backgroundColor: string\r\n *  postingTime: number\r\n *  content: string\r\n *  hashTags: Array<string>\r\n *  moodyPart: {\r\n *      symbol: string\r\n *      string: string\r\n *  }\r\n *  userId: string\r\n * }} props \r\n */\r\n\r\nfunction getVidID(link) {\r\n    var vidId = \"\";\r\n    if(link[13]=='.'){\r\n        for(var index = 17;index<17+11;index++){\r\n            vidId += link[index]\r\n        }\r\n    }\r\n    else{\r\n        for(var index = 32; index<32+11; index++){\r\n            vidId += link[index];\r\n        }\r\n    }\r\n    return vidId;\r\n}\r\n\r\n\r\nexport function writeComment() {\r\n\r\n}\r\n\r\n\r\nfunction PostContent(props) {\r\n    const {\r\n        link,\r\n        backgroundColor = '',\r\n        postingTime = '',\r\n        content,\r\n        hashTags = [],\r\n        moodyPart,\r\n        userId,\r\n        postId,\r\n        userName,\r\n        isPreview = false,\r\n    } = props\r\n    \r\n\r\n    const isQuestion = link == undefined;\r\n    const [curComment, setComment] = useState(\"\");\r\n    const [isChosen, setChose] = useState(false);\r\n\r\n    const { currentUser } = useAuth();\r\n    const [user, setUser] = useState({});\r\n    const [postComment, setPostComment] = useState([]);\r\n    const [showComment, setShowComment] = useState(false);\r\n\r\n    const commentRef = useRef();\r\n\r\n    const postRef = postId != undefined ? doc(db, isQuestion ?  \"questions\" : \"posts\", postId) : \"\";\r\n    const userRef = doc(db, \"users\", currentUser.uid);\r\n\r\n\r\n    var date = new Date(postingTime);\r\n    date = date.toString();\r\n    var hour = date.slice(15,21);\r\n    var strDate = date.slice(3,16);\r\n    strDate = hour + \",\" + strDate;\r\n\r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n            const data = await getDoc(userRef);\r\n            setUser(data.data());\r\n        }\r\n        const getPost = postRef != \"\" ? async () => {\r\n            const data = await getDoc(postRef);\r\n            // setPostComment(data.data().comment)\r\n        } : () => {}\r\n        getPost();\r\n        getUser();\r\n    }, [])\r\n\r\n    function resetComment() {\r\n        if(isChosen == false) {\r\n            console.log(\"resetComment\");\r\n            setChose(true);\r\n            setComment(\"\");\r\n        }\r\n    }\r\n\r\n    function updateCommnet(event) {\r\n        var x = event.target.value;\r\n        setComment(x);\r\n    }\r\n\r\n    async function keyDown(event) {\r\n        if(event.keyCode == 13){\r\n            event.preventDefault();\r\n            const commentData = {\r\n                author: user.username,\r\n                content: curComment,\r\n            }\r\n            commentRef.current.value = \"\";\r\n            resetComment();\r\n            console.log(commentData);\r\n            const newCommentKey = push(child(ref(rtdb), 'comments')).key;\r\n            const postRef = doc(db, \"posts\", postId);\r\n            var newComment = postComment;\r\n            newComment.push(newCommentKey);\r\n            setPostComment(newComment);\r\n\r\n            await updateDoc(postRef, {\r\n                comment: newComment\r\n            })\r\n\r\n            const updates = {};\r\n            updates['/comments/' + newCommentKey] = commentData;\r\n            return update(ref(rtdb), updates)\r\n            \r\n        }\r\n    }\r\n\r\n    function onClickComment (newVal) {\r\n        if(newVal == true) {\r\n            const commentRef = ref(rtdb, 'comments/');\r\n            onValue(commentRef, (snapshot) => {\r\n                const data = snapshot.val();\r\n            });\r\n        }\r\n        setShowComment(newVal)\r\n    } \r\n\r\n\tvar vidId = \"\";\r\n\tif(link != undefined) {\r\n        vidId = getVidID(link);\r\n    }\r\n    vidId = \"https://www.youtube.com/embed/\" + vidId\r\n    return (\r\n        <div className=\"post_content\" style={{ backgroundColor: backgroundColor }}>\r\n            <div className=\"post_header\">\r\n                <div className=\"user_id\">{userName}</div>\r\n                <div className=\"date\">{strDate}</div>\r\n            </div>\r\n            <div className=\"post_text\">{content}</div>\r\n            {\r\n                isQuestion == false ? <iframe width=\"560\" height=\"315\" src={vidId} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> : <div/>\r\n            }\r\n            <div className=\"status\">\r\n                {\r\n                    moodyPart == undefined ? <div></div>\r\n                    : <button className=\"moody_part\" style = {{backgroundColor: moodyPart == null ? \"transparent\" : moodyPart.moodColor}}>\r\n                        <div className=\"symbol\">{moodyPart?.moodSymbol}</div>\r\n                        <div className=\"string\">{moodyPart?.moodContent}</div>\r\n                    </button>\r\n                }\r\n                {hashTags.map(item => (\r\n                    <button className=\"hash_tag\" key={item}>{\"#\" + item}</button>\r\n                ))}\r\n            </div>\r\n            {\r\n                isPreview != false ? <div/>\r\n                : <div style = {{marginTop: 10}}>\r\n                    <div style = {{display: \"flex\", flexDirection: \"row\"}}>\r\n                        <div className = \"comment_text_field\">\r\n                            <Form.Control\r\n                                placeholder = \"add your comment to the post\"\r\n                                ref = {commentRef}\r\n                                onSelect = {(event) => {resetComment()}}\r\n                                onKeyDown = {(event) => {keyDown(event)}}\r\n                                onChange = {(event) => {updateCommnet(event)}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        showComment == false\r\n                        ? <a style = {{textDecoration: \"underline\"}} onClick = {(event) => {onClickComment(true)}}>Show comments</a>\r\n                        : <div>\r\n                            <a style = {{textDecoration: \"underline\"}} onClick = {(event) => {onClickComment(false)}}>Show less</a>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostContent","import { useState, useRef, useEffect } from \"react\";\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { listMoody } from './constant/mood_constant.js';\r\nimport { CONST_HASHTAG } from '../../constant/hash_tag.js'\r\nimport Chip from '@mui/material/Chip';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport './writing_pages.css';\r\nimport '../../posts_content/post_content.css';\r\nimport AppNavBar from \"../../constant/web_bar.js\";\r\nimport PostContent from \"../../posts_content/post_content.js\";\r\nimport { MOODY } from \"../../constant/moods.js\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../context/AuthContext.js\";\r\nimport { auth, db} from \"../../../firebase.js\";\r\nimport { getDocs, collection, doc, docs, getDoc, addDoc} from \"firebase/firestore\";\r\n\r\nconst lstMoody = [<option>Pick your mood</option>, ...listMoody];\r\n\r\n\r\nfunction WritingPost(props) {\r\n\r\n    \r\n    const location = useLocation();\r\n    const state = location.state;\r\n    const navigate = useNavigate();\r\n    const { currentUser } = useAuth();\r\n    const [user, setUser] = useState({});\r\n    const userRef = doc(db, \"users\", currentUser.uid);\r\n    \r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n            const data = await getDoc(userRef);\r\n            setUser(data.data());\r\n        }\r\n        getUser();\r\n    }, [])\r\n\r\n    const [songLink, setSongLink] = useState(state.songLink);\r\n    const [content, setContent] = useState(\"\");\r\n    const [hashTags, setHashTags] = useState([]);\r\n    const [moody, setMoody] = useState(\"\");\r\n    const [chosingColor, setChosingColor] = useState(\"#ffffff\");\r\n    const hashtagRef = useRef(); \r\n\r\n    async function writeQuestion() {\r\n        const postsRef = collection(db, \"posts\");\r\n        const docRef = await addDoc(postsRef, {\r\n            content: content,\r\n            userId: currentUser.uid,\r\n            color: chosingColor,\r\n            userName: user.username,\r\n            hashTags: hashTags,\r\n            moody: moody,\r\n            songLink: songLink,\r\n            comment: [],\r\n            postingTime: Date.now()\r\n        });\r\n        navigate(\"/song_surge_share\");\r\n    }\r\n\r\n    function _setMoody(event) {\r\n        setMoody(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppNavBar nameAppBar = \"SongSurge\"/>\r\n            <div style = {{display: \"flex\", flexDirection: \"row\"}}>\r\n                <div className = \"writing_part\">\r\n                    <div style = {{maxWidth: 700, marginTop: 50, marginLeft: 100}}>\r\n                        {/* Writing form -- Start */}\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label className = \"form_label\">Your Song</Form.Label>\r\n                                <Form.Control type = \"text\"\r\n                                    placeholder = \"Your Song Link\"\r\n                                    value = {songLink}\r\n                                    onChange = {(event) => {setSongLink(event.target.value)}}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label className = \"form_label\">Content</Form.Label>\r\n                                <Form.Control type = \"text\" as=\"textarea\"\r\n                                    placeholder = \"Share your words with us\" rows = {12} \r\n                                    onChange = {(event) => {setContent(event.target.value)}}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label className = \"form_label\">Hashtag</Form.Label>\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    id=\"tags-filled\"\r\n                                    options={CONST_HASHTAG.map((option) => option.title)}\r\n                                    freeSolo\r\n                                    renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                        <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\r\n                                    ))\r\n                                    }\r\n                                    onChange = {(event, value) => {\r\n                                        setHashTags(value);\r\n                                    }}\r\n                                    renderInput={(params) => (\r\n                                        <TextField \r\n                                        {...params}\r\n                                        variant=\"filled\"\r\n                                        placeholder=\"Hashtags\"/>\r\n                                    )}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                        {/* Writing form -- End */}\r\n                        <div>\r\n                            <Row className = \"categorization\">\r\n                                <Col xs = {5} >\r\n                                    <Row className = \"color_part\"  >\r\n                                        <Form.Control\r\n                                            type = \"color\"\r\n                                            defaultValue = \"#ffffff\"\r\n                                            onChange = {(event) => {setChosingColor(event.target.value)}}\r\n                                            className = \"color_picker\"\r\n                                        ></Form.Control>\r\n                                        <Col style = {{marginLeft: 10}}>\r\n                                            <Row className = \"picker_header\">Color</Row>\r\n                                            <Row className = \"picker_body\">Choose color for your post's background</Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col xs = {5}>\r\n                                    <Form.Select className = \"moody_picker\" placeholder = \"Pick your mood\" onChange = {(event) => {_setMoody(event)}}>\r\n                                        {lstMoody}\r\n                                    </Form.Select>\r\n                                </Col>\r\n                            </Row>  \r\n                        </div>    \r\n                        {/* Functionality Buttons */}\r\n                        <div style = {{display: \"flex\", flexDirection: \"row\"}}>\r\n                            <Button className = \"writing_button\" type = \"submit\" onClick = {writeQuestion}> \r\n                                Write Post\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"preview_part\"> \r\n                    <div style = {{width: \"fit-content\"}}>\r\n                        <div style = {{height: 50}}/>\r\n                        <div style = {{textAlign: \"center\"}}>Preview Post</div>\r\n                        <div style = {{height: 50}}/>\r\n                        <PostContent\r\n                        link = {songLink}\r\n                        backgroundColor = {chosingColor}\r\n                        moodyPart = {MOODY[moody]}\r\n                        hashTags = {hashTags}\r\n                        userId = {user.username}\r\n                        content = {content}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style = {{height: 100}}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WritingPost;","import { useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from \"firebase/auth\";\r\nimport { setDoc, doc, collection, getDoc } from \"firebase/firestore\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { auth, db } from \"../../firebase\";\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./sign_in_sign_up.css\";\r\nimport AppNavBar from \"../constant/web_bar\";\r\n\r\nfunction SignUp() {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [errorType, setErrorType] = useState(0);\r\n  const [loginEmail, setLoginEmail] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  const [loginUserName, setLoginUserName] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n  const { login, currentUser } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  async function logIn(event) {\r\n    event.preventDefault();\r\n    console.log(\"log_in\");\r\n    try {\r\n      const user = await login(loginEmail, loginPassword);\r\n      navigate(\"song_surge_share\");\r\n    } catch {\r\n      console.log(\"failed\");\r\n      setErrorMessage(\"Invalid email or password\");\r\n      setErrorType(1);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <AppNavBar nameAppBar = \"SongSurge\" isLogin = {false}/>\r\n      <div className = \"container\">\r\n        <div>\r\n          <div className = \"log_in_container\">\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type = \"text\" placeholder = \"Enter your email here\" onChange = {(event) => {\r\n                  setLoginEmail(event.target.value)\r\n                }} required isInvalid = {errorType == 1}></Form.Control>\r\n                <Form.Control.Feedback type = \"invalid\">\r\n                  {errorMessage}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type = \"password\" placeholder = \"Password\" onChange = {(event) => {\r\n                  setLoginPassword(event.target.value)\r\n                }}></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button onClick = {(event) => {logIn(event)}} style = {{marginTop: 20, marginBottom: 10}}>\r\n                Log in\r\n              </Button>\r\n              <div>\r\n                  Need an account? <Link to = \"sign_up\"> Sign Up </Link>\r\n              </div>\r\n\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  \r\n}\r\n\r\nexport default SignUp;","import React from \"react\";\r\nimport \"../posts_content/post_content.css\"\r\n\r\nexport function HashTag(props) {\r\n    const {\r\n        hashtag\r\n    } = props;\r\n    return(\r\n        <div className=\"hash_tag\" key={hashtag}>{\"#\" + hashtag}</div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"../posts_content/post_content.css\"\r\n\r\nexport function Moody(props) {\r\n    const {\r\n        moodyPart\r\n    } = props;\r\n    return(\r\n        <button className=\"moody_part\" style = {{backgroundColor: moodyPart == null ? \"transparent\" : moodyPart.moodColor}}>\r\n            <div className=\"symbol\">{moodyPart?.moodSymbol}</div>\r\n            <div className=\"string\">{moodyPart?.moodContent}</div>\r\n        </button>\r\n    );\r\n}","import './options.css';\r\nimport { React, useState, useEffecft } from \"react\";\r\nimport { Button } from \"react-bootstrap\"; \r\nimport { HashTag } from '../constant/hash_tag_ui';\r\nimport { Moody } from '../constant/moody_ui';\r\nimport { MOODY } from '../constant/moods'\r\nimport { useNavigate } from 'react-router';\r\n\r\nfunction Option(props) {\r\n    const {\r\n        search = false,\r\n        hashTags = [],\r\n        moods = [\"HappySunny\", \"Blue\",  \"Cucumber\", \"FireRock\"]\r\n    } = props\r\n    const navigate = useNavigate();\r\n    function writePost() {\r\n        search ? navigate(\"/writing_question\") : navigate(\"/enter_song\");\r\n    }\r\n    \r\n    return (\r\n        <div class = \"options\">\r\n            <div style = {{width: 400, position: \"fixed\"}}>\r\n                <Button className = \"write_button\" onClick = {(event) => {writePost()}}>Write a Post</Button>\r\n                <div class = \"trendingbox\">\r\n                    <div class =\"trendingtoday\">{'Trending today'}</div>\r\n                    <div style = {{display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\"}}>\r\n                        {hashTags.map((item) => {return <HashTag className = \"hash_tag\" hashtag = {item}/>})}\r\n                    </div>\r\n                </div>\r\n                <div class = \"moodybox\">\r\n                    <div class = \"moodytxt\">{'Moody'}</div>\r\n                    <div>\r\n                        {moods.map((item) => {return <Moody moodyPart = {MOODY[item]}/>})}\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Option","import './filter.css';\r\nimport { React, useState, useEffecft } from \"react\";\r\nimport { Button, Row, Col } from \"react-bootstrap\"; \r\nimport { HashTag } from '../constant/hash_tag_ui';\r\nimport { Moody } from '../constant/moody_ui';\r\nimport { MOODY } from '../constant/moods'\r\nimport { useNavigate } from 'react-router';\r\n\r\nfunction Filter(props) {\r\n    const {\r\n        search = false,\r\n        hashtag,\r\n        mood,\r\n        closeFunction = () => {},\r\n    } = props\r\n    const navigate = useNavigate();\r\n    function writePost() {\r\n        search ? navigate(\"/writing_question\") : navigate(\"/enter_song\");\r\n    }\r\n    const hasFilter = (hashtag != undefined || mood != undefined);\r\n    \r\n    return (\r\n        <div class = \"options\">\r\n            <div style = {{ position: \"fixed\", marginLeft: 20}}>\r\n                <div class = \"filterbox\">\r\n                    <Row style = {{marginBottom: 20}}>\r\n                        <Col xs = {10}><div class = \"moodytxt\">{'Filter'}</div></Col>\r\n                        {hasFilter ? <Col><button>X</button></Col> : <div/>}\r\n                    </Row>\r\n                    {mood != undefined ? <Moody moodyPart = {MOODY[mood]}/> : <div/>}\r\n                    {hashtag != undefined ? <HashTag className = \"hash_tag\" hashtag = {hashtag}/> : <div/>}\r\n                    {hasFilter ? <div/> : <div>There is no filter yet</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Filter","import {React, useState, useEffect} from \"react\";\r\nimport {useAuth} from \"../../context/AuthContext.js\";\r\nimport {db, auth} from \"../../firebase.js\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport AppNavBar from \"../constant/web_bar.js\";\r\nimport { getDocs, collection, doc, docs} from \"@firebase/firestore\";\r\nimport PostContent from \"../posts_content/post_content.js\";\r\nimport Option from \"../side_info/options.js\";\r\nimport \"./song_surge_share.css\";\r\nimport { MOODY } from \"../constant/moods.js\";\r\nimport Filter from \"../side_info/filter.js\";\r\n\r\nexport default function SongSurgeShare(props) {\r\n\r\n    const {currentUser} = useAuth();\r\n    const [user, setUser] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n    const postsRef = collection(db, \"posts\");\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            const data = await getDocs(postsRef);\r\n            const listPost = data.docs.map((doc) => {\r\n                const docData = doc.data();\r\n                console.log(doc.id);\r\n                console.log(docData.postingTime.seconds);\r\n                return <div style = {{width: \"fit-content\", marginRight: 50, marginLeft: 30}}>\r\n                    <PostContent \r\n                    postId = {doc.id}\r\n                    link = {docData.songLink}\r\n                    backgroundColor = {docData.color}\r\n                    content = {docData.content}\r\n                    hashTags = {docData.hashTags}\r\n                    moodyPart = {MOODY[docData.moody]}\r\n                    userId = {docData.userId}\r\n                    userName = {docData.userName}\r\n                    postingTime = {docData.postingTime}\r\n                    isPost = {true}/>\r\n                </div>;\r\n            });\r\n            listPost.reverse();\r\n            setPosts(listPost);\r\n        }\r\n\r\n        getPosts();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <AppNavBar nameAppBar = \"iSongSurgeShare\"/>\r\n            <div className = \"content\">\r\n                <div>\r\n                    <Filter/>\r\n                </div>\r\n                <div style = {{width: 680}}>\r\n                    {posts}\r\n                </div>\r\n                <div>\r\n                    <Option/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}","import {React, useState, useEffect} from \"react\";\r\nimport {useAuth} from \"../../context/AuthContext.js\";\r\nimport {db, auth} from \"../../firebase.js\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport AppNavBar from \"../constant/web_bar.js\";\r\nimport { getDocs, collection, doc, docs} from \"@firebase/firestore\";\r\nimport PostContent from \"../posts_content/post_content.js\";\r\nimport Option from \"../side_info/options.js\";\r\nimport \"./song_surge_search.css\";\r\nimport { MOODY } from \"../constant/moods.js\";\r\nimport Filter from \"../side_info/filter.js\";\r\n\r\nexport default function SongSurgeSearch(props) {\r\n\r\n    const {currentUser} = useAuth();\r\n    const [user, setUser] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n    const postsRef = collection(db, \"questions\");\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            const data = await getDocs(postsRef);\r\n            const listPost = data.docs.map((doc) => {\r\n                const docData = doc.data();\r\n                console.log(docData.moody);\r\n                return  <div style = {{width: \"fit-content\", marginRight: 50, marginLeft: 30}}>\r\n                    <PostContent \r\n                    postId = {doc.id}\r\n                    link = {docData.songLink}\r\n                    backgroundColor = {docData.color}\r\n                    content = {docData.content}\r\n                    hashTags = {docData.hashTags}\r\n                    moodyPart = {MOODY[docData.moody]}\r\n                    userId = {docData.userId}\r\n                    userName = {docData.userName}\r\n                    postingTime = {docData.postingTime.seconds}\r\n                    isPost = {false}/>\r\n                </div>;\r\n            });\r\n            setPosts(listPost);\r\n        }\r\n\r\n        getPosts();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <AppNavBar nameAppBar = \"iSongSurgeSearch\" isShare = {false}/>\r\n            <div className = \"content\">\r\n                <div>\r\n                    <Filter/>\r\n                </div>\r\n                <div style = {{width: 680}}>\r\n                    {posts}\r\n                </div>\r\n                <div>\r\n                    <Option/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}","import { useState, useRef, useEffect } from \"react\";\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { listMoody } from './constant/mood_constant.js';\r\nimport { CONST_HASHTAG } from '../../constant/hash_tag.js'\r\nimport Chip from '@mui/material/Chip';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport './writing_pages.css';\r\nimport '../../posts_content/post_content.css';\r\nimport AppNavBar from \"../../constant/web_bar.js\";\r\nimport PostContent from \"../../posts_content/post_content.js\";\r\nimport { MOODY } from \"../../constant/moods.js\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../context/AuthContext.js\";\r\nimport { auth, db} from \"../../../firebase.js\";\r\nimport { getDocs, collection, doc, docs, getDoc, addDoc} from \"firebase/firestore\";\r\n\r\nconst lstMoody = [<option>Pick your mood</option>, ...listMoody];\r\n\r\n\r\nfunction WritingQuestion(props) {\r\n\r\n    \r\n    const location = useLocation();\r\n    const state = location.state;\r\n    const { currentUser } = useAuth();\r\n    const [user, setUser] = useState({});\r\n    const navigate = useNavigate();\r\n    const userRef = doc(db, \"users\", currentUser.uid);\r\n    \r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n            const data = await getDoc(userRef);\r\n            setUser(data.data());\r\n        }\r\n        getUser();\r\n    }, [])\r\n\r\n    const [content, setContent] = useState(\"\");\r\n    const [hashTags, setHashTags] = useState([]);\r\n    const [moody, setMoody] = useState(\"\");\r\n    const [chosingColor, setChosingColor] = useState(\"#ffffff\");\r\n    const hashtagRef = useRef(); \r\n    async function writeQuestion() {\r\n        const postsRef = collection(db, \"questions\");\r\n        const current = new Date();\r\n        const docRef = await addDoc(postsRef, {\r\n            content: content,\r\n            userId: currentUser.uid,\r\n            color: chosingColor,\r\n            userName: user.username,\r\n            hashTags: hashTags,\r\n            moody: moody,\r\n            postingTime: current,\r\n            comment: [],\r\n            postingTime: Date.now()\r\n        });\r\n        navigate(\"/song_surge_search\");\r\n    }\r\n\r\n    function _setMoody(event) {\r\n        setMoody(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppNavBar nameAppBar = \"SongSurge\"/>\r\n            <div style = {{display: \"flex\", flexDirection: \"row\"}}>\r\n                <div className = \"writing_part\">\r\n                    <div style = {{maxWidth: 700, marginTop: 50, marginLeft: 100}}>\r\n                        {/* Writing form -- Start */}\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label className = \"form_label\">Content</Form.Label>\r\n                                <Form.Control type = \"text\" as=\"textarea\"\r\n                                    placeholder = \"Share your words with us\" rows = {12} \r\n                                    onChange = {(event) => {setContent(event.target.value)}}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label className = \"form_label\">Hashtag</Form.Label>\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    id=\"tags-filled\"\r\n                                    options={CONST_HASHTAG.map((option) => option.title)}\r\n                                    freeSolo\r\n                                    renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                        <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\r\n                                    ))\r\n                                    }\r\n                                    onChange = {(event, value) => {\r\n                                        setHashTags(value);\r\n                                    }}\r\n                                    renderInput={(params) => (\r\n                                        <TextField \r\n                                        {...params}\r\n                                        variant=\"filled\"\r\n                                        placeholder=\"Hashtags\"/>\r\n                                    )}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                        {/* Writing form -- End */}\r\n                        <div>\r\n                            <Row className = \"categorization\">\r\n                                <Col xs = {5} >\r\n                                    <Row className = \"color_part\"  >\r\n                                        <Form.Control\r\n                                            type = \"color\"\r\n                                            defaultValue = \"#ffffff\"\r\n                                            onChange = {(event) => {setChosingColor(event.target.value)}}\r\n                                            className = \"color_picker\"\r\n                                        ></Form.Control>\r\n                                        <Col style = {{marginLeft: 10}}>\r\n                                            <Row className = \"picker_header\">Color</Row>\r\n                                            <Row className = \"picker_body\">Choose color for your post's background</Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col xs = {5}>\r\n                                    <Form.Select className = \"moody_picker\" placeholder = \"Pick your mood\" onChange = {(event) => {_setMoody(event)}}>\r\n                                        {lstMoody}\r\n                                    </Form.Select>\r\n                                </Col>\r\n                            </Row>  \r\n                        </div>    \r\n                        {/* Functionality Buttons */}\r\n                        <div style = {{display: \"flex\", flexDirection: \"row\"}}>\r\n                            <Button className = \"writing_button\" type = \"submit\" onClick = {writeQuestion}> \r\n                                Write Post\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"preview_part\"> \r\n                    <div style = {{width: \"fit-content\"}}>\r\n                        <div style = {{height: 50}}/>\r\n                        <div style = {{textAlign: \"center\"}}>Preview Post</div>\r\n                        <div style = {{height: 50}}/>\r\n                        <PostContent\r\n                        backgroundColor = {chosingColor}\r\n                        moodyPart = {MOODY[moody]}\r\n                        hashTags = {hashTags}\r\n                        userId = {user.username}\r\n                        content = {content}\r\n                        isPost = {false}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style = {{height: 100}}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WritingQuestion;","import logo from './logo.svg';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Routes,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport SignUp from './components/sign_in_sign__up/sign_up';\r\nimport EnterSongPage from './components/writing_feature/song_enter_page/song_enter_page';\r\nimport WritingPost from './components/writing_feature/writing_pages/writing_post';\r\nimport PostContent from './components/posts_content/post_content';\r\nimport SignIn from './components/sign_in_sign__up/log_in';\r\nimport SongSurgeShare from './components/share/song_surge_share';\r\nimport SongSurgeSearch from './components/search/song_surge_search';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport WritingQuestion from './components/writing_feature/writing_pages/writing_question';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n        <Routes>\r\n          <Route path = \"/\" element = {<SignIn/>}> </Route>\r\n          <Route path = '/post_content_preview' element = {<PostContent/>}></Route>\r\n          <Route path = \"/sign_up\" element = {<SignUp/>}></Route>\r\n          <Route path = \"/sing_in\" element = {<SignIn/>}></Route>\r\n          <Route path = \"/enter_song\" element = {<EnterSongPage/>}></Route>\r\n          <Route path = \"/writing_post\" element = {<WritingPost/>}></Route> \r\n          <Route path = \"/writing_question\" element = {<WritingQuestion/>}></Route> \r\n          <Route path = \"/song_surge_share\" element = {<SongSurgeShare/>} />\r\n          <Route path = \"/song_surge_search\" element = {<SongSurgeSearch/>} />\r\n        </Routes>\r\n      </AuthProvider>\r\n    </Router>\r\n    \r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <PostContent\r\n//         userId=\"IamPostContent\"\r\n//         postingTime={Date.now()}\r\n//         content={`I just feel in love with a girl who I think was born for me, and I also find this song. It's quite what I'm thinking about her. She is perfect, she is who I want to marry and get old together.`}\r\n//         link=\"https://www.youtube.com/embed/GBUAez6w5ec\"\r\n//         moodyPart={{\r\n//           symbol: '🌞',\r\n//           string: 'Feeling happy like sunny day'\r\n//         }}\r\n//         hashTags={['#love', '#perfect', '#happy']}\r\n//       ></PostContent>\r\n//     </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}